spring:
  application:
    name: "gatewayserver"
  #    importing config server instead of profiles like in previous appraoch
  config:
    import: "optional:configserver:http://localhost:8071/"
#    by below we're saying to gatewar that please connect to discovery server(eureka) & locate all the microservices
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
#          service names can be allowed in lowecase now, as in eurekaserver
          lowerCaseServiceId: true
#          global timeout configs, if any microservice api request takes more time than defined below
#      then default gateway timeout response will be thrown to client
      httpclient:
#        below defines time limit(1s) to establish connection between particular microservice and gatewayserver
#        if connection not established in this time, then throw gateway timeout
        connect-timeout: 1000
#        below defines time limit(2s) to get a response from microservice, if response not received within 2s
#        to gatewayserver then throw gateway timeout
        response-timeout: 10s
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s

management:
  endpoints:
    web:
      exposure:
        include: "*"
#        enabling gateway endpoint in actuator
  endpoint:
    gateway:
      enabled: true

  #  enabling actuator/info endpoint
  info:
    env:
      enabled: true

#this is the information which will displayed inside eureka dashboard
#since there can be many microservices that register with eurekaserver, giving this information will
#make it more clear
#the below information will be showed using actuator/info endpoint, by default this endpoint is not enabled
#we've to explicitly enable it
info:
  app:
    name: "gatewayserver"
    description: "Eazy Bank Gateway server Application"
    version: "1.0.0"

#defining default logging level
logging:
  level:
    com:
      eazybytes:
        gatewayserver: DEBUG

#circuit breaker related props
resilience4j.circuitbreaker:
  configs:
#    setting default this means this props will be set for all circuit breakers in the app
#    if you want to define props dfferently for each circuitbreaker then use circuit breaker names instead of using default
#    circuit breaker names are defined in main class like for ex: accountsCircuitBreaker
    default:
#      setting to allow 10 requests to make a judgement whether to move from closed to open state
      slidingWindowSize: 10
#      setting to allow 2 requests when circuit breaker is in half_open_state
      permittedNumberOfCallsInHalfOpenState: 2
#      setting failure threshold, if 50% of requests get failed/slow responses, then move to open state
      failureRateThreshold: 50
#      setting duration in which circuit will remain in open state
#      after 10000ms it will go into half_open_state, again checks if microservice working properly
#      decision will be taken accordingly
      waitDurationInOpenState: 10000



